@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 255, 255, 255;
  --background-start-rgb: 0, 0, 0;
  --background-end-rgb: 20, 0, 30;
  --accent-primary: 180, 0, 255;
  --accent-secondary: 255, 0, 60;
  --accent-tertiary: 255, 182, 193;
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
    to bottom,
    rgb(var(--background-start-rgb)),
    rgb(var(--background-end-rgb))
  );
  min-height: 100vh;
  position: relative;
  perspective: 1000px;
}

body::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    radial-gradient(circle at 20% 30%, rgba(180, 0, 255, 0.15) 0%, transparent 50%),
    radial-gradient(circle at 80% 70%, rgba(255, 0, 60, 0.15) 0%, transparent 50%);
  pointer-events: none;
  z-index: 0;
  animation: gradient-shift 15s ease-in-out infinite alternate;
}

@layer components {
  .btn-primary {
    @apply px-4 py-2 bg-gradient-to-r from-violet-600 to-red-600 text-white rounded-lg 
           hover:from-violet-700 hover:to-red-700 transition-all duration-300 
           transform hover:scale-105 hover:translate-y-[-2px] hover:rotate-1
           shadow-lg shadow-violet-500/20 hover:shadow-violet-500/40
           relative overflow-hidden;
  }
  
  .btn-primary::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.2),
      transparent
    );
    transition: 0.5s;
  }
  
  .btn-primary:hover::before {
    left: 100%;
  }
  
  .card {
    @apply bg-gray-900/80 backdrop-blur-sm rounded-xl shadow-lg p-6 
           border border-violet-500/20 hover:border-violet-500/40 
           transition-all duration-500 transform hover:scale-[1.02] 
           hover:shadow-violet-500/10 hover:rotate-1
           relative overflow-hidden;
  }
  
  .card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(
      circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
      rgba(180, 0, 255, 0.1) 0%,
      transparent 50%
    );
    opacity: 0;
    transition: opacity 0.3s;
  }
  
  .card:hover::before {
    opacity: 1;
  }
  
  .input-field {
    @apply w-full px-4 py-2 bg-gray-800/80 border border-violet-500/30 
           rounded-lg focus:outline-none focus:ring-2 focus:ring-violet-500 
           text-white placeholder-gray-400 transition-all duration-300
           transform hover:scale-[1.01] focus:scale-[1.02]
           hover:border-violet-500/50;
  }
  
  .glass-effect {
    @apply bg-gray-900/60 backdrop-blur-md border border-violet-500/20 
           shadow-lg shadow-violet-500/10 transition-all duration-300
           hover:shadow-violet-500/20 hover:border-violet-500/30;
  }
  
  .text-glow {
    @apply text-transparent bg-clip-text bg-gradient-to-r from-violet-400 to-red-400
           animate-text-shine;
  }
  
  .border-glow {
    @apply border border-violet-500/30 shadow-lg shadow-violet-500/10
           transition-all duration-300 hover:shadow-violet-500/20
           hover:border-violet-500/50;
  }
  
  .hover-3d {
    @apply transition-all duration-300 transform hover:scale-105 
           hover:translate-y-[-5px] hover:rotate-1
           hover:shadow-xl hover:shadow-violet-500/20;
  }
}

/* Animations */
@keyframes fade-in {
  from { opacity: 0; transform: translateY(10px) rotateX(-10deg); }
  to { opacity: 1; transform: translateY(0) rotateX(0); }
}

@keyframes dragon-breathe {
  0% { transform: scale(1) rotate(0deg); }
  50% { transform: scale(1.05) rotate(1deg); }
  100% { transform: scale(1) rotate(0deg); }
}

@keyframes wing-flap {
  0% { transform: rotate(0deg) translateY(0); }
  50% { transform: rotate(15deg) translateY(-5px); }
  100% { transform: rotate(0deg) translateY(0); }
}

@keyframes rocket-flame {
  0% { transform: scale(1) rotate(-5deg); opacity: 1; }
  50% { transform: scale(1.2) rotate(5deg); opacity: 0.8; }
  100% { transform: scale(1) rotate(-5deg); opacity: 1; }
}

@keyframes twinkle {
  0% { opacity: 0.3; transform: scale(1); }
  50% { opacity: 1; transform: scale(1.2); }
  100% { opacity: 0.3; transform: scale(1); }
}

@keyframes gradient-shift {
  0% { background-position: 0% 50%; }
  100% { background-position: 100% 50%; }
}

@keyframes text-shine {
  0% { background-position: -200% center; }
  100% { background-position: 200% center; }
}

.animate-fade-in {
  animation: fade-in 0.5s ease-out forwards;
}

.animate-dragon-breathe {
  animation: dragon-breathe 3s ease-in-out infinite;
}

.animate-wing-flap {
  animation: wing-flap 0.5s ease-in-out infinite;
}

.animate-rocket-flame {
  animation: rocket-flame 0.3s ease-in-out infinite;
}

.animate-twinkle {
  animation: twinkle 1.5s ease-in-out infinite;
}

.animate-text-shine {
  background-size: 200% auto;
  animation: text-shine 3s linear infinite;
}

/* 3D Card Effect */
.card-3d {
  transform-style: preserve-3d;
  transition: transform 0.3s ease;
  --rotate-x: 0deg;
  --rotate-y: 0deg;
  --mouse-x: 50%;
  --mouse-y: 50%;
  transform: rotateX(var(--rotate-x)) rotateY(var(--rotate-y));
  background: radial-gradient(
    circle at var(--mouse-x) var(--mouse-y),
    rgba(139, 92, 246, 0.15),
    rgba(0, 0, 0, 0.3) 40%
  );
}

.card-3d::before {
  content: '';
  position: absolute;
  inset: 0;
  background: radial-gradient(
    circle at var(--mouse-x) var(--mouse-y),
    rgba(180, 0, 255, 0.3),
    rgba(255, 0, 60, 0.2),
    transparent 40%
  );
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
  border-radius: inherit;
}

.card-3d:hover::before {
  opacity: 1;
}

/* Floating Animation */
.float {
  animation: float 6s ease-in-out infinite;
}

@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

/* Glow Effect */
.glow {
  position: relative;
  overflow: hidden;
}

.glow::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(
    circle at center,
    rgba(180, 0, 255, 0.2),
    rgba(255, 0, 60, 0.1),
    transparent 70%
  );
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.glow:hover::before {
  opacity: 1;
  animation: rotate 4s linear infinite;
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Fade In Animation */
.animate-fade-in {
  animation: fadeIn 0.5s ease-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Button Hover 3D Effect */
.hover-3d {
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.hover-3d:hover {
  transform: translateY(-2px) scale(1.02);
  box-shadow: 0 8px 20px rgba(139, 92, 246, 0.3);
}

/* Input Field Glow */
.input-field:focus {
  box-shadow: 0 0 15px rgba(180, 0, 255, 0.3);
  border-color: rgba(255, 182, 193, 0.5);
}

/* Dragon Animation Enhancements */
.dragon {
  transform-style: preserve-3d;
  transition: transform 0.3s ease;
  --dragon-primary: rgb(180, 0, 255);
  --dragon-secondary: rgb(255, 0, 60);
  --dragon-accent: rgb(255, 182, 193);
}

.dragon:hover {
  transform: scale(1.1) rotate(5deg);
}

.dragon-body {
  background: linear-gradient(135deg, var(--dragon-primary), var(--dragon-secondary));
}

.dragon-wing {
  transform-origin: top center;
  animation: wingFlap 2s ease-in-out infinite;
  background: linear-gradient(135deg, var(--dragon-secondary), var(--dragon-accent));
}

@keyframes wingFlap {
  0%, 100% {
    transform: rotateX(0deg);
  }
  50% {
    transform: rotateX(30deg);
  }
}

.dragon-fire {
  opacity: 0;
  transition: opacity 0.3s ease;
  background: linear-gradient(to bottom, var(--dragon-secondary), var(--dragon-accent));
}

.dragon:hover .dragon-fire {
  opacity: 1;
  animation: fireGlow 1s ease-in-out infinite;
}

@keyframes fireGlow {
  0%, 100% {
    filter: brightness(1);
  }
  50% {
    filter: brightness(1.5);
  }
}

/* Launch Animation */
.launch-animation {
  animation: launch 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
  transform-origin: center bottom;
}

@keyframes launch {
  0% {
    opacity: 0;
    transform: scale(0.3) rotate(-10deg) translateY(100px);
  }
  50% {
    opacity: 0.5;
    transform: scale(1.1) rotate(5deg) translateY(-10px);
  }
  100% {
    opacity: 1;
    transform: scale(1) rotate(0) translateY(0);
  }
}

/* Mode-specific launch effects */
.launch-text {
  animation: launchText 0.8s cubic-bezier(0.34, 1.56, 0.64, 1);
}

@keyframes launchText {
  0% {
    opacity: 0;
    transform: scale(0.3) translateX(-100px);
  }
  50% {
    opacity: 0.5;
    transform: scale(1.1) translateX(20px);
  }
  100% {
    opacity: 1;
    transform: scale(1) translateX(0);
  }
}

.launch-visual {
  animation: launchVisual 0.8s cubic-bezier(0.34, 1.56, 0.64, 1);
}

@keyframes launchVisual {
  0% {
    opacity: 0;
    transform: scale(0.3) translateY(100px) rotate(10deg);
  }
  50% {
    opacity: 0.5;
    transform: scale(1.1) translateY(-20px) rotate(-5deg);
  }
  100% {
    opacity: 1;
    transform: scale(1) translateY(0) rotate(0);
  }
}

.launch-audio {
  animation: launchAudio 0.8s cubic-bezier(0.34, 1.56, 0.64, 1);
}

@keyframes launchAudio {
  0% {
    opacity: 0;
    transform: scale(0.3) translateX(100px);
  }
  50% {
    opacity: 0.5;
    transform: scale(1.1) translateX(-20px);
  }
  100% {
    opacity: 1;
    transform: scale(1) translateX(0);
  }
}

/* Launch trail effect */
.launch-trail {
  position: relative;
}

.launch-trail::after {
  content: '';
  position: absolute;
  bottom: -10px;
  left: 50%;
  width: 2px;
  height: 20px;
  background: linear-gradient(to bottom, 
    rgba(180, 0, 255, 0.8),
    rgba(255, 0, 60, 0.8),
    rgba(255, 182, 193, 0.8)
  );
  transform: translateX(-50%);
  animation: trailFade 0.5s ease-out forwards;
}

@keyframes trailFade {
  0% {
    height: 50px;
    opacity: 1;
  }
  100% {
    height: 0;
    opacity: 0;
  }
}

/* Dragon Fire Throwing Animation */
.dragon-fire-throw {
  position: absolute;
  width: 100px;
  height: 100px;
  pointer-events: none;
  z-index: 10;
}

.fire-ball {
  position: absolute;
  width: 30px;
  height: 30px;
  background: radial-gradient(circle at center,
    var(--dragon-accent) 0%,
    var(--dragon-secondary) 50%,
    var(--dragon-primary) 100%
  );
  border-radius: 50%;
  filter: blur(2px);
  opacity: 0;
  transform-origin: center;
}

.fire-ball::before {
  content: '';
  position: absolute;
  inset: 0;
  background: radial-gradient(circle at center,
    rgba(255, 255, 255, 0.8) 0%,
    transparent 70%
  );
  border-radius: 50%;
  animation: fireGlow 0.5s ease-in-out infinite alternate;
}

@keyframes throwFire {
  0% {
    opacity: 0;
    transform: scale(0.5) translate(0, 0);
  }
  10% {
    opacity: 1;
    transform: scale(1) translate(0, 0);
  }
  90% {
    opacity: 1;
    transform: scale(1) translate(var(--target-x), var(--target-y));
  }
  100% {
    opacity: 0;
    transform: scale(0.5) translate(var(--target-x), var(--target-y));
  }
}

@keyframes fireGlow {
  0% {
    opacity: 0.5;
    transform: scale(1);
  }
  100% {
    opacity: 1;
    transform: scale(1.2);
  }
}

.dragon.breathing-fire .dragon-fire {
  opacity: 1;
  transform: scale(1.2);
  filter: brightness(1.5);
}

.dragon.breathing-fire .dragon-body {
  transform: scale(1.05);
  filter: brightness(1.2);
}

.dragon.breathing-fire .dragon-wing {
  animation: wingFlap 0.3s ease-in-out infinite;
}

/* Enhanced Dragon Styles */
.dragon {
  --dragon-primary: rgb(180, 0, 255);
  --dragon-secondary: rgb(255, 0, 60);
  --dragon-accent: rgb(255, 182, 193);
  transform-style: preserve-3d;
  transition: transform 0.3s ease;
}

.dragon-body {
  background: linear-gradient(135deg, var(--dragon-primary), var(--dragon-secondary));
  transition: transform 0.3s ease, filter 0.3s ease;
}

.dragon-wing {
  background: linear-gradient(135deg, var(--dragon-secondary), var(--dragon-accent));
  transform-origin: top center;
  animation: wingFlap 2s ease-in-out infinite;
  transition: animation 0.3s ease;
}

.dragon-fire {
  background: linear-gradient(to bottom, var(--dragon-secondary), var(--dragon-accent));
  opacity: 0;
  transition: opacity 0.3s ease, transform 0.3s ease, filter 0.3s ease;
} 